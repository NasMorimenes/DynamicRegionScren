#Include MCode.ahk

/**
 * Ordena um array de inteiros usando o algoritmo Quicksort.
 * 
 * @param arr      O array a ser ordenado.
 * @param esquerda O índice do elemento mais à esquerda do array.
 * @param direita  O índice do elemento mais à direita do array.
 * 
 * A função ordena o array 'arr' em ordem crescente entre os índices 'esquerda' e 'direita'.
 */
/*
void qsort_independente(int *arr, int esquerda, int direita) {
    int i = esquerda, j = direita;
    int pivot = arr[(esquerda + direita) / 2];

    // Particionamento
    while (i <= j) {
        // Encontra elementos menores que o pivot
        while (arr[i] < pivot)
            i++;
        // Encontra elementos maiores que o pivot
        while (arr[j] > pivot)
            j--;
        // Troca os elementos encontrados
        if (i <= j) {
            int temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
            i++;
            j--;
        }
    }

    // Recursão para ordenar as sub-listas
    if (esquerda < j)
        qsort_independente(arr, esquerda, j);
    if (i < direita)
        qsort_independente(arr, i, direita);
}

Ra := [ 10, 5, 4, 9 ]
Ar := Buffer( 32, 0 )
for Value in Ra {
    NumPut( "Int", Value, Ar, 4 * ( A_Index - 1 ) )
}

for Value in Ra {
    MsgBox( NumGet(Ar, 4 * ( A_Index - 1 ), "Int" ) )
}
*/
QSort( Buf, indEnd, indIni := 0 ) {
    Hex :=
    (
    "4157415641554154555756534883ec58899424a80000004989cf44898424b0000000039424b0000000448b8424b000000089d0c1e8"
    "1f01d0d1f84898418b14878b8424a800000089c14439c17f6c4863c14963f048c1e002498d1cb74d8d1407448b0b498d440704458b"
    "1a4139d37d7c4989c2448b18488d400483c1014139d37cee4439ca7d1c498d44b7fc0f1f40004889c3448b084883e8044183e80141"
    "39d17fed4139c87ca145890a83c1014183e80144891b4439c17e94894c2424448944242c443b8424a80000007f5a8b4424243b8424"
    "b00000000f8dd3060000898424a800000089c2e936ffffff4439ca7c9645890a83c1014183e80144891bebb5894c24304489442434"
    "398c24a80000000f8cea0000008b7c2434397c242c7ead89bc24a80000008b7c242c8b9424a8000000448b8424a800000001fa89f9"
    "89d0c1e81f01d0d1f84898418b14874139c87fae4963c04863f148c1e002498d1cb74d8d1407448b0b498d440704458b1a4439da7e"
    "4a0f1f40004989c2448b18488d40044183c0014439da7fed4439ca7d1a498d44b7fc0f1f004889c3448b084883e80483e9014439ca"
    "7cee4439c17c9e45890a4183c00183e90144891beb8f4439ca7ccd45890a4183c00183e90144891be978ffffff894c243844894424"
    "3c398c24a80000000f8cfc0000008b7c243c397c24300f8e1dffffff89bc24a80000008b7c24308b9424a8000000448b8424a80000"
    "0001fa89f989d0c1e81f01d0d1f84898418b1487662e0f1f8400000000004139c87fa04963c04863f148c1e002498d1cb74d8d1407"
    "448b0b498d440704458b1a4439da7e4f660f1f8400000000004989c2448b18488d40044183c0014439da7fed4439ca7d1a498d44b7"
    "fc0f1f004889c3448b084883e80483e9014439ca7cee4439c17c9945890a4183c00183e90144891beb8a4439ca7ccd45890a4183c0"
    "0183e90144891be973ffffff89542440894c2444399424a80000000f8c240100008b7c2444397c24380f8e0bffffff89bc24a80000"
    "008b7c24388b9424a80000008b8c24a800000001fa89d0c1e81f01d089fad1f84898458b04870f1f400039d17fa94863c14863f248"
    "c1e002498d1cb74d8d0c07448b1b498d440704458b114539d07e4e662e0f1f8400000000004989c1448b10488d400483c1014539d0"
    "7fee4539d87d1b498d44b7fc0f1f40004889c3448b184883e80483ea014539d87cee39ca7c9a45891983c10183ea01448913eb8c45"
    "39d87cce45891983c10183ea01448913e976ffffff660f1f4400004439ca7d1d498d44b7fc660f1f4400004889c3448b084883e804"
    "83e9014439ca7cee4139c80f8e7b010000894c24284489442448398c24a80000000f8ca80000008b7c2448397c24400f8ee3feffff"
    "89bc24a80000008b7c24408b9424a8000000448b8424a800000001fa89f989d0c1e81f01d0d1f84898418b14874139c87faa4963c0"
    "4863f148c1e002498d1cb74d8d1c07448b0b498d440704458b134439d20f8ef6000000660f1f8400000000004989c3448b10488d40"
    "044183c0014439d27fede938ffffff4439ac24a80000000f8ce200000044397424280f8e60ffffff4489b424a8000000448b6c2428"
    "8b9424a8000000448bb424a80000004401ea89d0c1e81f01d0d1f84898418b1487904539ee7fb34963c64d63dd48c1e0024f8d149f"
    "4d8d0c07418b0a498d440704458b014139d07d4f660f1f8400000000004989c1448b00488d40044183c6014439c27fed39ca7d1a4b"
    "8d449ffc0f1f40004989c28b084883e8044183ed0139ca7cef4539f57c9a4189094183c6014183ed01458902eb8a39ca7ccd418909"
    "4183c6014183ed01458902e973ffffff4439ca0f8c5ffeffff45890b4183c00183e901448913e9c4feffff448974244c44896c2420"
    "448bac24a80000008b6c24204589ec428d542d0089d0c1e81f01d0d1f84898418b14870f1f004139ec7f6a4963c44c63dd48c1e002"
    "4f8d149f4d8d0c07418b0a498d440704458b014139d07d60904989c1448b00488d40044183c4014439c27fed39ca7d194b8d449ffc"
    "0f1f40004989c28b084883e80483ed0139ca7cf04439e57ca34189094183c40183ed014589024139ec7e964139ed7c364439642420"
    "0f8ea00100004589e5e95bffffff39ca7cb44189094183c40183ed01458902ebd04139f50f8cc000000039fd7ecd4189fd428d542d"
    "0089ee4489ef89d0c1e81f01d0d1f84898418b14870f1f44000039f77fce4863c74c63de48c1e0024f8d149f4d8d0c07418b0a498d"
    "440704458b014139d07d4c662e0f1f8400000000004989c1448b00488d400483c7014439c27fee39ca7d1a4b8d449ffc0f1f440000"
    "4989c28b084883e80483ee0139ca7cf039fe7c9c41890983c70183ee01458902eb8e39ca7cd041890983c70183ee01458902e979ff"
    "ffff4539c50f8cb700000039de0f8e43ffffff4189dd428d142e4189f04489eb89d0c1e81f01d0d1f84898458b0c870f1f40004439"
    "c37fca4863c34d63f048c1e0024f8d1cb7498d0c07458b13498d4407048b114439ca7d5266904889c18b10488d400483c3014139d1"
    "7fef4539d17d1d4b8d44b7fc0f1f4400004989c3448b104883e8044183e8014539d17ced4139d87ca044891183c3014183e8014189"
    "13eb91660f1f8400000000004539d17cc144891183c3014183e801418913e971ffffff4489ea4c89f9e85ef8ffffe939ffffff448b"
    "74244ce9c5fcffff4883c4585b5e5f5d415c415d415e415fc3"
    )

    code := MCode( Hex )

    DllCall(
        code,
        "Ptr", Buf,
        "Int", indIni,
        "Int", indEnd,
        "Int"
    )

}


/*
qSort( Ar, ) {
    
}